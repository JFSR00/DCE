
ROBOT_TEST_00.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000005da  0000064e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005da  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000654  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000684  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  000006c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d3f  00000000  00000000  00000744  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b39  00000000  00000000  00001483  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000476  00000000  00000000  00001fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000011c  00000000  00000000  00002434  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000056f  00000000  00000000  00002550  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002f0  00000000  00000000  00002abf  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002daf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  1c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  2c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  34:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  38:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  3c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  40:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  50:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  54:	0c 94 87 00 	jmp	0x10e	; 0x10e <__vector_21>
  58:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  5c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  60:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  64:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  68:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  6c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  70:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  74:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  78:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  7c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  80:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  84:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  88:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  8c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  90:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  94:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  98:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  9c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  a0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  a4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  a8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
  b8:	11 e0       	ldi	r17, 0x01	; 1
  ba:	a0 e0       	ldi	r26, 0x00	; 0
  bc:	b1 e0       	ldi	r27, 0x01	; 1
  be:	ea ed       	ldi	r30, 0xDA	; 218
  c0:	f5 e0       	ldi	r31, 0x05	; 5
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <__do_copy_data+0x10>
  c4:	05 90       	lpm	r0, Z+
  c6:	0d 92       	st	X+, r0
  c8:	a6 30       	cpi	r26, 0x06	; 6
  ca:	b1 07       	cpc	r27, r17
  cc:	d9 f7       	brne	.-10     	; 0xc4 <__do_copy_data+0xc>
  ce:	0e 94 6d 00 	call	0xda	; 0xda <main>
  d2:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <_exit>

000000d6 <__bad_interrupt>:
  d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <main>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "timers.h"

int main(void)
{
  da:	cf 93       	push	r28
  dc:	df 93       	push	r29
  de:	00 d0       	rcall	.+0      	; 0xe0 <main+0x6>
  e0:	00 d0       	rcall	.+0      	; 0xe2 <main+0x8>
  e2:	00 d0       	rcall	.+0      	; 0xe4 <main+0xa>
  e4:	cd b7       	in	r28, 0x3d	; 61
  e6:	de b7       	in	r29, 0x3e	; 62
	// VARIABLES DEFINITIONS -------------------
	uint16_t startMelody[3] = {330,370,392};
  e8:	86 e0       	ldi	r24, 0x06	; 6
  ea:	e0 e0       	ldi	r30, 0x00	; 0
  ec:	f1 e0       	ldi	r31, 0x01	; 1
  ee:	de 01       	movw	r26, r28
  f0:	11 96       	adiw	r26, 0x01	; 1
  f2:	01 90       	ld	r0, Z+
  f4:	0d 92       	st	X+, r0
  f6:	8a 95       	dec	r24
  f8:	e1 f7       	brne	.-8      	; 0xf2 <main+0x18>
	// SETUP -----------------------------------
	// BEGIN -----------------------------------
	melody(startMelody, 150, 3);
  fa:	23 e0       	ldi	r18, 0x03	; 3
  fc:	40 e0       	ldi	r20, 0x00	; 0
  fe:	50 e0       	ldi	r21, 0x00	; 0
 100:	66 e1       	ldi	r22, 0x16	; 22
 102:	73 e4       	ldi	r23, 0x43	; 67
 104:	ce 01       	movw	r24, r28
 106:	01 96       	adiw	r24, 0x01	; 1
 108:	0e 94 12 01 	call	0x224	; 0x224 <melody>
 10c:	ff cf       	rjmp	.-2      	; 0x10c <main+0x32>

0000010e <__vector_21>:
void timer0_setFreq(uint16_t freq){	// Sets OCR0A to the value of specified frequency
	OCR0A = OCR(freq, TIMER0_PRESC);
}

void timer0_setOCR(uint8_t ocr){	// Sets OCR0A
	OCR0A = ocr;
 10e:	1f 92       	push	r1
 110:	0f 92       	push	r0
 112:	0f b6       	in	r0, 0x3f	; 63
 114:	0f 92       	push	r0
 116:	11 24       	eor	r1, r1
 118:	8f 93       	push	r24
 11a:	9f 93       	push	r25
 11c:	95 b1       	in	r25, 0x05	; 5
 11e:	84 e0       	ldi	r24, 0x04	; 4
 120:	89 27       	eor	r24, r25
 122:	85 b9       	out	0x05, r24	; 5
 124:	9f 91       	pop	r25
 126:	8f 91       	pop	r24
 128:	0f 90       	pop	r0
 12a:	0f be       	out	0x3f, r0	; 63
 12c:	0f 90       	pop	r0
 12e:	1f 90       	pop	r1
 130:	18 95       	reti

00000132 <timer0_init>:
 132:	22 9a       	sbi	0x04, 2	; 4
 134:	94 b5       	in	r25, 0x24	; 36
 136:	92 60       	ori	r25, 0x02	; 2
 138:	94 bd       	out	0x24, r25	; 36
 13a:	87 bd       	out	0x27, r24	; 39
 13c:	60 34       	cpi	r22, 0x40	; 64
 13e:	71 05       	cpc	r23, r1
 140:	c1 f0       	breq	.+48     	; 0x172 <timer0_init+0x40>
 142:	38 f4       	brcc	.+14     	; 0x152 <timer0_init+0x20>
 144:	61 30       	cpi	r22, 0x01	; 1
 146:	71 05       	cpc	r23, r1
 148:	61 f0       	breq	.+24     	; 0x162 <timer0_init+0x30>
 14a:	68 30       	cpi	r22, 0x08	; 8
 14c:	71 05       	cpc	r23, r1
 14e:	69 f0       	breq	.+26     	; 0x16a <timer0_init+0x38>
 150:	1c c0       	rjmp	.+56     	; 0x18a <timer0_init+0x58>
 152:	61 15       	cp	r22, r1
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	78 07       	cpc	r23, r24
 158:	81 f0       	breq	.+32     	; 0x17a <timer0_init+0x48>
 15a:	61 15       	cp	r22, r1
 15c:	74 40       	sbci	r23, 0x04	; 4
 15e:	89 f0       	breq	.+34     	; 0x182 <timer0_init+0x50>
 160:	14 c0       	rjmp	.+40     	; 0x18a <timer0_init+0x58>
 162:	85 b5       	in	r24, 0x25	; 37
 164:	81 60       	ori	r24, 0x01	; 1
 166:	85 bd       	out	0x25, r24	; 37
 168:	08 95       	ret
 16a:	85 b5       	in	r24, 0x25	; 37
 16c:	82 60       	ori	r24, 0x02	; 2
 16e:	85 bd       	out	0x25, r24	; 37
 170:	08 95       	ret
 172:	85 b5       	in	r24, 0x25	; 37
 174:	83 60       	ori	r24, 0x03	; 3
 176:	85 bd       	out	0x25, r24	; 37
 178:	08 95       	ret
 17a:	85 b5       	in	r24, 0x25	; 37
 17c:	84 60       	ori	r24, 0x04	; 4
 17e:	85 bd       	out	0x25, r24	; 37
 180:	08 95       	ret
 182:	85 b5       	in	r24, 0x25	; 37
 184:	85 60       	ori	r24, 0x05	; 5
 186:	85 bd       	out	0x25, r24	; 37
 188:	08 95       	ret
 18a:	85 b5       	in	r24, 0x25	; 37
 18c:	81 60       	ori	r24, 0x01	; 1
 18e:	85 bd       	out	0x25, r24	; 37
 190:	08 95       	ret

00000192 <timer0_enaINT>:
 192:	ee e6       	ldi	r30, 0x6E	; 110
 194:	f0 e0       	ldi	r31, 0x00	; 0
 196:	80 81       	ld	r24, Z
 198:	82 60       	ori	r24, 0x02	; 2
 19a:	80 83       	st	Z, r24
 19c:	08 95       	ret

0000019e <timer0_disINT>:
 19e:	ee e6       	ldi	r30, 0x6E	; 110
 1a0:	f0 e0       	ldi	r31, 0x00	; 0
 1a2:	80 81       	ld	r24, Z
 1a4:	8d 7f       	andi	r24, 0xFD	; 253
 1a6:	80 83       	st	Z, r24
 1a8:	08 95       	ret

000001aa <timer0_setFreq>:
 1aa:	9c 01       	movw	r18, r24
 1ac:	40 e0       	ldi	r20, 0x00	; 0
 1ae:	50 e0       	ldi	r21, 0x00	; 0
 1b0:	60 e9       	ldi	r22, 0x90	; 144
 1b2:	70 ed       	ldi	r23, 0xD0	; 208
 1b4:	83 e0       	ldi	r24, 0x03	; 3
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	0e 94 aa 02 	call	0x554	; 0x554 <__divmodsi4>
 1bc:	21 50       	subi	r18, 0x01	; 1
 1be:	27 bd       	out	0x27, r18	; 39
 1c0:	08 95       	ret

000001c2 <timer1_init>:
// --------------------------------------------------------------------------------
// --------------------| TIMER 1 |-------------------------------------------------
// --------------------------------------------------------------------------------

void timer1_init(){
	TCCR1B |= (1<<WGM12);			// CTC mode (Clear Timer on Compare match)
 1c2:	e1 e8       	ldi	r30, 0x81	; 129
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	80 81       	ld	r24, Z
 1c8:	88 60       	ori	r24, 0x08	; 8
 1ca:	80 83       	st	Z, r24
	OCR1A = 0;
 1cc:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1d0:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	TCCR1B |= (1<<CS12)|(1<<CS10);	// Default preescaler at 1024
 1d4:	80 81       	ld	r24, Z
 1d6:	85 60       	ori	r24, 0x05	; 5
 1d8:	80 83       	st	Z, r24
 1da:	08 95       	ret

000001dc <timer1_delay_ms>:
}

void timer1_delay_ms(float delay){
 1dc:	9b 01       	movw	r18, r22
 1de:	ac 01       	movw	r20, r24
	OCR1A = (uint16_t)((float)OCR((1000/delay), 1024));	// Sets the OCR register to the value of specified delay
 1e0:	60 e0       	ldi	r22, 0x00	; 0
 1e2:	70 e0       	ldi	r23, 0x00	; 0
 1e4:	8a e7       	ldi	r24, 0x7A	; 122
 1e6:	94 e4       	ldi	r25, 0x44	; 68
 1e8:	0e 94 b8 01 	call	0x370	; 0x370 <__divsf3>
 1ec:	9b 01       	movw	r18, r22
 1ee:	ac 01       	movw	r20, r24
 1f0:	60 e0       	ldi	r22, 0x00	; 0
 1f2:	74 e2       	ldi	r23, 0x24	; 36
 1f4:	84 e7       	ldi	r24, 0x74	; 116
 1f6:	96 e4       	ldi	r25, 0x46	; 70
 1f8:	0e 94 b8 01 	call	0x370	; 0x370 <__divsf3>
 1fc:	20 e0       	ldi	r18, 0x00	; 0
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	40 e8       	ldi	r20, 0x80	; 128
 202:	5f e3       	ldi	r21, 0x3F	; 63
 204:	0e 94 4b 01 	call	0x296	; 0x296 <__subsf3>
 208:	0e 94 2a 02 	call	0x454	; 0x454 <__fixunssfsi>
 20c:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 210:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	TIFR1 |= (1 << OCF1A);			// Clears Output Compare C Match Flag
 214:	b1 9a       	sbi	0x16, 1	; 22
	TCNT1 = 0;						// Restart the Timer1
 216:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 21a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	while(!(TIFR1 & (1 << OCF1A)));	// Waits to the compare match
 21e:	b1 9b       	sbis	0x16, 1	; 22
 220:	fe cf       	rjmp	.-4      	; 0x21e <timer1_delay_ms+0x42>
}
 222:	08 95       	ret

00000224 <melody>:

void melody(uint16_t *freqs, float period, uint8_t size){
 224:	bf 92       	push	r11
 226:	cf 92       	push	r12
 228:	df 92       	push	r13
 22a:	ef 92       	push	r14
 22c:	ff 92       	push	r15
 22e:	0f 93       	push	r16
 230:	1f 93       	push	r17
 232:	cf 93       	push	r28
 234:	df 93       	push	r29
 236:	b8 2e       	mov	r11, r24
 238:	c9 2f       	mov	r28, r25
 23a:	6a 01       	movw	r12, r20
 23c:	7b 01       	movw	r14, r22
 23e:	d2 2f       	mov	r29, r18
	uint8_t i;
	timer0_init(0, 64);				// That's the optimal configuration to use Timer0 as sound generator
 240:	60 e4       	ldi	r22, 0x40	; 64
 242:	70 e0       	ldi	r23, 0x00	; 0
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	0e 94 99 00 	call	0x132	; 0x132 <timer0_init>
	timer1_init();
 24a:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <timer1_init>
	timer0_disINT();				// Disables sound generation before setting the sound frequency
 24e:	0e 94 cf 00 	call	0x19e	; 0x19e <timer0_disINT>
	sei();							// Enables global interrupts
 252:	78 94       	sei
	for(i=0; i<size; i++){
 254:	dd 23       	and	r29, r29
 256:	91 f0       	breq	.+36     	; 0x27c <melody+0x58>
 258:	0b 2d       	mov	r16, r11
 25a:	1c 2f       	mov	r17, r28
 25c:	c0 e0       	ldi	r28, 0x00	; 0
		timer0_setFreq(freqs[i]);	// Sets the sound frequency
 25e:	f8 01       	movw	r30, r16
 260:	81 91       	ld	r24, Z+
 262:	91 91       	ld	r25, Z+
 264:	8f 01       	movw	r16, r30
 266:	0e 94 d5 00 	call	0x1aa	; 0x1aa <timer0_setFreq>
		timer0_enaINT();			// Enables sound generation, it's enabled only on first iteration
 26a:	0e 94 c9 00 	call	0x192	; 0x192 <timer0_enaINT>
		timer1_delay_ms(period);	// Delays upt to the end of the sound period
 26e:	c7 01       	movw	r24, r14
 270:	b6 01       	movw	r22, r12
 272:	0e 94 ee 00 	call	0x1dc	; 0x1dc <timer1_delay_ms>
	uint8_t i;
	timer0_init(0, 64);				// That's the optimal configuration to use Timer0 as sound generator
	timer1_init();
	timer0_disINT();				// Disables sound generation before setting the sound frequency
	sei();							// Enables global interrupts
	for(i=0; i<size; i++){
 276:	cf 5f       	subi	r28, 0xFF	; 255
 278:	dc 13       	cpse	r29, r28
 27a:	f1 cf       	rjmp	.-30     	; 0x25e <melody+0x3a>
		timer0_setFreq(freqs[i]);	// Sets the sound frequency
		timer0_enaINT();			// Enables sound generation, it's enabled only on first iteration
		timer1_delay_ms(period);	// Delays upt to the end of the sound period
	}
	timer0_disINT();				// Disables sound generation and all interrupts after the end of the melody
 27c:	0e 94 cf 00 	call	0x19e	; 0x19e <timer0_disINT>
	cli();
 280:	f8 94       	cli
 282:	df 91       	pop	r29
 284:	cf 91       	pop	r28
 286:	1f 91       	pop	r17
 288:	0f 91       	pop	r16
 28a:	ff 90       	pop	r15
 28c:	ef 90       	pop	r14
 28e:	df 90       	pop	r13
 290:	cf 90       	pop	r12
 292:	bf 90       	pop	r11
 294:	08 95       	ret

00000296 <__subsf3>:
 296:	50 58       	subi	r21, 0x80	; 128

00000298 <__addsf3>:
 298:	bb 27       	eor	r27, r27
 29a:	aa 27       	eor	r26, r26
 29c:	0e 94 63 01 	call	0x2c6	; 0x2c6 <__addsf3x>
 2a0:	0c 94 70 02 	jmp	0x4e0	; 0x4e0 <__fp_round>
 2a4:	0e 94 62 02 	call	0x4c4	; 0x4c4 <__fp_pscA>
 2a8:	38 f0       	brcs	.+14     	; 0x2b8 <__addsf3+0x20>
 2aa:	0e 94 69 02 	call	0x4d2	; 0x4d2 <__fp_pscB>
 2ae:	20 f0       	brcs	.+8      	; 0x2b8 <__addsf3+0x20>
 2b0:	39 f4       	brne	.+14     	; 0x2c0 <__addsf3+0x28>
 2b2:	9f 3f       	cpi	r25, 0xFF	; 255
 2b4:	19 f4       	brne	.+6      	; 0x2bc <__addsf3+0x24>
 2b6:	26 f4       	brtc	.+8      	; 0x2c0 <__addsf3+0x28>
 2b8:	0c 94 5f 02 	jmp	0x4be	; 0x4be <__fp_nan>
 2bc:	0e f4       	brtc	.+2      	; 0x2c0 <__addsf3+0x28>
 2be:	e0 95       	com	r30
 2c0:	e7 fb       	bst	r30, 7
 2c2:	0c 94 59 02 	jmp	0x4b2	; 0x4b2 <__fp_inf>

000002c6 <__addsf3x>:
 2c6:	e9 2f       	mov	r30, r25
 2c8:	0e 94 81 02 	call	0x502	; 0x502 <__fp_split3>
 2cc:	58 f3       	brcs	.-42     	; 0x2a4 <__addsf3+0xc>
 2ce:	ba 17       	cp	r27, r26
 2d0:	62 07       	cpc	r22, r18
 2d2:	73 07       	cpc	r23, r19
 2d4:	84 07       	cpc	r24, r20
 2d6:	95 07       	cpc	r25, r21
 2d8:	20 f0       	brcs	.+8      	; 0x2e2 <__addsf3x+0x1c>
 2da:	79 f4       	brne	.+30     	; 0x2fa <__addsf3x+0x34>
 2dc:	a6 f5       	brtc	.+104    	; 0x346 <__addsf3x+0x80>
 2de:	0c 94 a3 02 	jmp	0x546	; 0x546 <__fp_zero>
 2e2:	0e f4       	brtc	.+2      	; 0x2e6 <__addsf3x+0x20>
 2e4:	e0 95       	com	r30
 2e6:	0b 2e       	mov	r0, r27
 2e8:	ba 2f       	mov	r27, r26
 2ea:	a0 2d       	mov	r26, r0
 2ec:	0b 01       	movw	r0, r22
 2ee:	b9 01       	movw	r22, r18
 2f0:	90 01       	movw	r18, r0
 2f2:	0c 01       	movw	r0, r24
 2f4:	ca 01       	movw	r24, r20
 2f6:	a0 01       	movw	r20, r0
 2f8:	11 24       	eor	r1, r1
 2fa:	ff 27       	eor	r31, r31
 2fc:	59 1b       	sub	r21, r25
 2fe:	99 f0       	breq	.+38     	; 0x326 <__addsf3x+0x60>
 300:	59 3f       	cpi	r21, 0xF9	; 249
 302:	50 f4       	brcc	.+20     	; 0x318 <__addsf3x+0x52>
 304:	50 3e       	cpi	r21, 0xE0	; 224
 306:	68 f1       	brcs	.+90     	; 0x362 <__addsf3x+0x9c>
 308:	1a 16       	cp	r1, r26
 30a:	f0 40       	sbci	r31, 0x00	; 0
 30c:	a2 2f       	mov	r26, r18
 30e:	23 2f       	mov	r18, r19
 310:	34 2f       	mov	r19, r20
 312:	44 27       	eor	r20, r20
 314:	58 5f       	subi	r21, 0xF8	; 248
 316:	f3 cf       	rjmp	.-26     	; 0x2fe <__addsf3x+0x38>
 318:	46 95       	lsr	r20
 31a:	37 95       	ror	r19
 31c:	27 95       	ror	r18
 31e:	a7 95       	ror	r26
 320:	f0 40       	sbci	r31, 0x00	; 0
 322:	53 95       	inc	r21
 324:	c9 f7       	brne	.-14     	; 0x318 <__addsf3x+0x52>
 326:	7e f4       	brtc	.+30     	; 0x346 <__addsf3x+0x80>
 328:	1f 16       	cp	r1, r31
 32a:	ba 0b       	sbc	r27, r26
 32c:	62 0b       	sbc	r22, r18
 32e:	73 0b       	sbc	r23, r19
 330:	84 0b       	sbc	r24, r20
 332:	ba f0       	brmi	.+46     	; 0x362 <__addsf3x+0x9c>
 334:	91 50       	subi	r25, 0x01	; 1
 336:	a1 f0       	breq	.+40     	; 0x360 <__addsf3x+0x9a>
 338:	ff 0f       	add	r31, r31
 33a:	bb 1f       	adc	r27, r27
 33c:	66 1f       	adc	r22, r22
 33e:	77 1f       	adc	r23, r23
 340:	88 1f       	adc	r24, r24
 342:	c2 f7       	brpl	.-16     	; 0x334 <__addsf3x+0x6e>
 344:	0e c0       	rjmp	.+28     	; 0x362 <__addsf3x+0x9c>
 346:	ba 0f       	add	r27, r26
 348:	62 1f       	adc	r22, r18
 34a:	73 1f       	adc	r23, r19
 34c:	84 1f       	adc	r24, r20
 34e:	48 f4       	brcc	.+18     	; 0x362 <__addsf3x+0x9c>
 350:	87 95       	ror	r24
 352:	77 95       	ror	r23
 354:	67 95       	ror	r22
 356:	b7 95       	ror	r27
 358:	f7 95       	ror	r31
 35a:	9e 3f       	cpi	r25, 0xFE	; 254
 35c:	08 f0       	brcs	.+2      	; 0x360 <__addsf3x+0x9a>
 35e:	b0 cf       	rjmp	.-160    	; 0x2c0 <__addsf3+0x28>
 360:	93 95       	inc	r25
 362:	88 0f       	add	r24, r24
 364:	08 f0       	brcs	.+2      	; 0x368 <__addsf3x+0xa2>
 366:	99 27       	eor	r25, r25
 368:	ee 0f       	add	r30, r30
 36a:	97 95       	ror	r25
 36c:	87 95       	ror	r24
 36e:	08 95       	ret

00000370 <__divsf3>:
 370:	0e 94 cc 01 	call	0x398	; 0x398 <__divsf3x>
 374:	0c 94 70 02 	jmp	0x4e0	; 0x4e0 <__fp_round>
 378:	0e 94 69 02 	call	0x4d2	; 0x4d2 <__fp_pscB>
 37c:	58 f0       	brcs	.+22     	; 0x394 <__divsf3+0x24>
 37e:	0e 94 62 02 	call	0x4c4	; 0x4c4 <__fp_pscA>
 382:	40 f0       	brcs	.+16     	; 0x394 <__divsf3+0x24>
 384:	29 f4       	brne	.+10     	; 0x390 <__divsf3+0x20>
 386:	5f 3f       	cpi	r21, 0xFF	; 255
 388:	29 f0       	breq	.+10     	; 0x394 <__divsf3+0x24>
 38a:	0c 94 59 02 	jmp	0x4b2	; 0x4b2 <__fp_inf>
 38e:	51 11       	cpse	r21, r1
 390:	0c 94 a4 02 	jmp	0x548	; 0x548 <__fp_szero>
 394:	0c 94 5f 02 	jmp	0x4be	; 0x4be <__fp_nan>

00000398 <__divsf3x>:
 398:	0e 94 81 02 	call	0x502	; 0x502 <__fp_split3>
 39c:	68 f3       	brcs	.-38     	; 0x378 <__divsf3+0x8>

0000039e <__divsf3_pse>:
 39e:	99 23       	and	r25, r25
 3a0:	b1 f3       	breq	.-20     	; 0x38e <__divsf3+0x1e>
 3a2:	55 23       	and	r21, r21
 3a4:	91 f3       	breq	.-28     	; 0x38a <__divsf3+0x1a>
 3a6:	95 1b       	sub	r25, r21
 3a8:	55 0b       	sbc	r21, r21
 3aa:	bb 27       	eor	r27, r27
 3ac:	aa 27       	eor	r26, r26
 3ae:	62 17       	cp	r22, r18
 3b0:	73 07       	cpc	r23, r19
 3b2:	84 07       	cpc	r24, r20
 3b4:	38 f0       	brcs	.+14     	; 0x3c4 <__divsf3_pse+0x26>
 3b6:	9f 5f       	subi	r25, 0xFF	; 255
 3b8:	5f 4f       	sbci	r21, 0xFF	; 255
 3ba:	22 0f       	add	r18, r18
 3bc:	33 1f       	adc	r19, r19
 3be:	44 1f       	adc	r20, r20
 3c0:	aa 1f       	adc	r26, r26
 3c2:	a9 f3       	breq	.-22     	; 0x3ae <__divsf3_pse+0x10>
 3c4:	35 d0       	rcall	.+106    	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 3c6:	0e 2e       	mov	r0, r30
 3c8:	3a f0       	brmi	.+14     	; 0x3d8 <__divsf3_pse+0x3a>
 3ca:	e0 e8       	ldi	r30, 0x80	; 128
 3cc:	32 d0       	rcall	.+100    	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 3ce:	91 50       	subi	r25, 0x01	; 1
 3d0:	50 40       	sbci	r21, 0x00	; 0
 3d2:	e6 95       	lsr	r30
 3d4:	00 1c       	adc	r0, r0
 3d6:	ca f7       	brpl	.-14     	; 0x3ca <__divsf3_pse+0x2c>
 3d8:	2b d0       	rcall	.+86     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 3da:	fe 2f       	mov	r31, r30
 3dc:	29 d0       	rcall	.+82     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 3de:	66 0f       	add	r22, r22
 3e0:	77 1f       	adc	r23, r23
 3e2:	88 1f       	adc	r24, r24
 3e4:	bb 1f       	adc	r27, r27
 3e6:	26 17       	cp	r18, r22
 3e8:	37 07       	cpc	r19, r23
 3ea:	48 07       	cpc	r20, r24
 3ec:	ab 07       	cpc	r26, r27
 3ee:	b0 e8       	ldi	r27, 0x80	; 128
 3f0:	09 f0       	breq	.+2      	; 0x3f4 <__divsf3_pse+0x56>
 3f2:	bb 0b       	sbc	r27, r27
 3f4:	80 2d       	mov	r24, r0
 3f6:	bf 01       	movw	r22, r30
 3f8:	ff 27       	eor	r31, r31
 3fa:	93 58       	subi	r25, 0x83	; 131
 3fc:	5f 4f       	sbci	r21, 0xFF	; 255
 3fe:	3a f0       	brmi	.+14     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 400:	9e 3f       	cpi	r25, 0xFE	; 254
 402:	51 05       	cpc	r21, r1
 404:	78 f0       	brcs	.+30     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 406:	0c 94 59 02 	jmp	0x4b2	; 0x4b2 <__fp_inf>
 40a:	0c 94 a4 02 	jmp	0x548	; 0x548 <__fp_szero>
 40e:	5f 3f       	cpi	r21, 0xFF	; 255
 410:	e4 f3       	brlt	.-8      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 412:	98 3e       	cpi	r25, 0xE8	; 232
 414:	d4 f3       	brlt	.-12     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 416:	86 95       	lsr	r24
 418:	77 95       	ror	r23
 41a:	67 95       	ror	r22
 41c:	b7 95       	ror	r27
 41e:	f7 95       	ror	r31
 420:	9f 5f       	subi	r25, 0xFF	; 255
 422:	c9 f7       	brne	.-14     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 424:	88 0f       	add	r24, r24
 426:	91 1d       	adc	r25, r1
 428:	96 95       	lsr	r25
 42a:	87 95       	ror	r24
 42c:	97 f9       	bld	r25, 7
 42e:	08 95       	ret
 430:	e1 e0       	ldi	r30, 0x01	; 1
 432:	66 0f       	add	r22, r22
 434:	77 1f       	adc	r23, r23
 436:	88 1f       	adc	r24, r24
 438:	bb 1f       	adc	r27, r27
 43a:	62 17       	cp	r22, r18
 43c:	73 07       	cpc	r23, r19
 43e:	84 07       	cpc	r24, r20
 440:	ba 07       	cpc	r27, r26
 442:	20 f0       	brcs	.+8      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 444:	62 1b       	sub	r22, r18
 446:	73 0b       	sbc	r23, r19
 448:	84 0b       	sbc	r24, r20
 44a:	ba 0b       	sbc	r27, r26
 44c:	ee 1f       	adc	r30, r30
 44e:	88 f7       	brcc	.-30     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 450:	e0 95       	com	r30
 452:	08 95       	ret

00000454 <__fixunssfsi>:
 454:	0e 94 89 02 	call	0x512	; 0x512 <__fp_splitA>
 458:	88 f0       	brcs	.+34     	; 0x47c <__fixunssfsi+0x28>
 45a:	9f 57       	subi	r25, 0x7F	; 127
 45c:	98 f0       	brcs	.+38     	; 0x484 <__fixunssfsi+0x30>
 45e:	b9 2f       	mov	r27, r25
 460:	99 27       	eor	r25, r25
 462:	b7 51       	subi	r27, 0x17	; 23
 464:	b0 f0       	brcs	.+44     	; 0x492 <__fixunssfsi+0x3e>
 466:	e1 f0       	breq	.+56     	; 0x4a0 <__fixunssfsi+0x4c>
 468:	66 0f       	add	r22, r22
 46a:	77 1f       	adc	r23, r23
 46c:	88 1f       	adc	r24, r24
 46e:	99 1f       	adc	r25, r25
 470:	1a f0       	brmi	.+6      	; 0x478 <__fixunssfsi+0x24>
 472:	ba 95       	dec	r27
 474:	c9 f7       	brne	.-14     	; 0x468 <__fixunssfsi+0x14>
 476:	14 c0       	rjmp	.+40     	; 0x4a0 <__fixunssfsi+0x4c>
 478:	b1 30       	cpi	r27, 0x01	; 1
 47a:	91 f0       	breq	.+36     	; 0x4a0 <__fixunssfsi+0x4c>
 47c:	0e 94 a3 02 	call	0x546	; 0x546 <__fp_zero>
 480:	b1 e0       	ldi	r27, 0x01	; 1
 482:	08 95       	ret
 484:	0c 94 a3 02 	jmp	0x546	; 0x546 <__fp_zero>
 488:	67 2f       	mov	r22, r23
 48a:	78 2f       	mov	r23, r24
 48c:	88 27       	eor	r24, r24
 48e:	b8 5f       	subi	r27, 0xF8	; 248
 490:	39 f0       	breq	.+14     	; 0x4a0 <__fixunssfsi+0x4c>
 492:	b9 3f       	cpi	r27, 0xF9	; 249
 494:	cc f3       	brlt	.-14     	; 0x488 <__fixunssfsi+0x34>
 496:	86 95       	lsr	r24
 498:	77 95       	ror	r23
 49a:	67 95       	ror	r22
 49c:	b3 95       	inc	r27
 49e:	d9 f7       	brne	.-10     	; 0x496 <__fixunssfsi+0x42>
 4a0:	3e f4       	brtc	.+14     	; 0x4b0 <__fixunssfsi+0x5c>
 4a2:	90 95       	com	r25
 4a4:	80 95       	com	r24
 4a6:	70 95       	com	r23
 4a8:	61 95       	neg	r22
 4aa:	7f 4f       	sbci	r23, 0xFF	; 255
 4ac:	8f 4f       	sbci	r24, 0xFF	; 255
 4ae:	9f 4f       	sbci	r25, 0xFF	; 255
 4b0:	08 95       	ret

000004b2 <__fp_inf>:
 4b2:	97 f9       	bld	r25, 7
 4b4:	9f 67       	ori	r25, 0x7F	; 127
 4b6:	80 e8       	ldi	r24, 0x80	; 128
 4b8:	70 e0       	ldi	r23, 0x00	; 0
 4ba:	60 e0       	ldi	r22, 0x00	; 0
 4bc:	08 95       	ret

000004be <__fp_nan>:
 4be:	9f ef       	ldi	r25, 0xFF	; 255
 4c0:	80 ec       	ldi	r24, 0xC0	; 192
 4c2:	08 95       	ret

000004c4 <__fp_pscA>:
 4c4:	00 24       	eor	r0, r0
 4c6:	0a 94       	dec	r0
 4c8:	16 16       	cp	r1, r22
 4ca:	17 06       	cpc	r1, r23
 4cc:	18 06       	cpc	r1, r24
 4ce:	09 06       	cpc	r0, r25
 4d0:	08 95       	ret

000004d2 <__fp_pscB>:
 4d2:	00 24       	eor	r0, r0
 4d4:	0a 94       	dec	r0
 4d6:	12 16       	cp	r1, r18
 4d8:	13 06       	cpc	r1, r19
 4da:	14 06       	cpc	r1, r20
 4dc:	05 06       	cpc	r0, r21
 4de:	08 95       	ret

000004e0 <__fp_round>:
 4e0:	09 2e       	mov	r0, r25
 4e2:	03 94       	inc	r0
 4e4:	00 0c       	add	r0, r0
 4e6:	11 f4       	brne	.+4      	; 0x4ec <__fp_round+0xc>
 4e8:	88 23       	and	r24, r24
 4ea:	52 f0       	brmi	.+20     	; 0x500 <__fp_round+0x20>
 4ec:	bb 0f       	add	r27, r27
 4ee:	40 f4       	brcc	.+16     	; 0x500 <__fp_round+0x20>
 4f0:	bf 2b       	or	r27, r31
 4f2:	11 f4       	brne	.+4      	; 0x4f8 <__fp_round+0x18>
 4f4:	60 ff       	sbrs	r22, 0
 4f6:	04 c0       	rjmp	.+8      	; 0x500 <__fp_round+0x20>
 4f8:	6f 5f       	subi	r22, 0xFF	; 255
 4fa:	7f 4f       	sbci	r23, 0xFF	; 255
 4fc:	8f 4f       	sbci	r24, 0xFF	; 255
 4fe:	9f 4f       	sbci	r25, 0xFF	; 255
 500:	08 95       	ret

00000502 <__fp_split3>:
 502:	57 fd       	sbrc	r21, 7
 504:	90 58       	subi	r25, 0x80	; 128
 506:	44 0f       	add	r20, r20
 508:	55 1f       	adc	r21, r21
 50a:	59 f0       	breq	.+22     	; 0x522 <__fp_splitA+0x10>
 50c:	5f 3f       	cpi	r21, 0xFF	; 255
 50e:	71 f0       	breq	.+28     	; 0x52c <__fp_splitA+0x1a>
 510:	47 95       	ror	r20

00000512 <__fp_splitA>:
 512:	88 0f       	add	r24, r24
 514:	97 fb       	bst	r25, 7
 516:	99 1f       	adc	r25, r25
 518:	61 f0       	breq	.+24     	; 0x532 <__fp_splitA+0x20>
 51a:	9f 3f       	cpi	r25, 0xFF	; 255
 51c:	79 f0       	breq	.+30     	; 0x53c <__fp_splitA+0x2a>
 51e:	87 95       	ror	r24
 520:	08 95       	ret
 522:	12 16       	cp	r1, r18
 524:	13 06       	cpc	r1, r19
 526:	14 06       	cpc	r1, r20
 528:	55 1f       	adc	r21, r21
 52a:	f2 cf       	rjmp	.-28     	; 0x510 <__fp_split3+0xe>
 52c:	46 95       	lsr	r20
 52e:	f1 df       	rcall	.-30     	; 0x512 <__fp_splitA>
 530:	08 c0       	rjmp	.+16     	; 0x542 <__fp_splitA+0x30>
 532:	16 16       	cp	r1, r22
 534:	17 06       	cpc	r1, r23
 536:	18 06       	cpc	r1, r24
 538:	99 1f       	adc	r25, r25
 53a:	f1 cf       	rjmp	.-30     	; 0x51e <__fp_splitA+0xc>
 53c:	86 95       	lsr	r24
 53e:	71 05       	cpc	r23, r1
 540:	61 05       	cpc	r22, r1
 542:	08 94       	sec
 544:	08 95       	ret

00000546 <__fp_zero>:
 546:	e8 94       	clt

00000548 <__fp_szero>:
 548:	bb 27       	eor	r27, r27
 54a:	66 27       	eor	r22, r22
 54c:	77 27       	eor	r23, r23
 54e:	cb 01       	movw	r24, r22
 550:	97 f9       	bld	r25, 7
 552:	08 95       	ret

00000554 <__divmodsi4>:
 554:	05 2e       	mov	r0, r21
 556:	97 fb       	bst	r25, 7
 558:	1e f4       	brtc	.+6      	; 0x560 <__divmodsi4+0xc>
 55a:	00 94       	com	r0
 55c:	0e 94 c1 02 	call	0x582	; 0x582 <__negsi2>
 560:	57 fd       	sbrc	r21, 7
 562:	07 d0       	rcall	.+14     	; 0x572 <__divmodsi4_neg2>
 564:	0e 94 c9 02 	call	0x592	; 0x592 <__udivmodsi4>
 568:	07 fc       	sbrc	r0, 7
 56a:	03 d0       	rcall	.+6      	; 0x572 <__divmodsi4_neg2>
 56c:	4e f4       	brtc	.+18     	; 0x580 <__divmodsi4_exit>
 56e:	0c 94 c1 02 	jmp	0x582	; 0x582 <__negsi2>

00000572 <__divmodsi4_neg2>:
 572:	50 95       	com	r21
 574:	40 95       	com	r20
 576:	30 95       	com	r19
 578:	21 95       	neg	r18
 57a:	3f 4f       	sbci	r19, 0xFF	; 255
 57c:	4f 4f       	sbci	r20, 0xFF	; 255
 57e:	5f 4f       	sbci	r21, 0xFF	; 255

00000580 <__divmodsi4_exit>:
 580:	08 95       	ret

00000582 <__negsi2>:
 582:	90 95       	com	r25
 584:	80 95       	com	r24
 586:	70 95       	com	r23
 588:	61 95       	neg	r22
 58a:	7f 4f       	sbci	r23, 0xFF	; 255
 58c:	8f 4f       	sbci	r24, 0xFF	; 255
 58e:	9f 4f       	sbci	r25, 0xFF	; 255
 590:	08 95       	ret

00000592 <__udivmodsi4>:
 592:	a1 e2       	ldi	r26, 0x21	; 33
 594:	1a 2e       	mov	r1, r26
 596:	aa 1b       	sub	r26, r26
 598:	bb 1b       	sub	r27, r27
 59a:	fd 01       	movw	r30, r26
 59c:	0d c0       	rjmp	.+26     	; 0x5b8 <__udivmodsi4_ep>

0000059e <__udivmodsi4_loop>:
 59e:	aa 1f       	adc	r26, r26
 5a0:	bb 1f       	adc	r27, r27
 5a2:	ee 1f       	adc	r30, r30
 5a4:	ff 1f       	adc	r31, r31
 5a6:	a2 17       	cp	r26, r18
 5a8:	b3 07       	cpc	r27, r19
 5aa:	e4 07       	cpc	r30, r20
 5ac:	f5 07       	cpc	r31, r21
 5ae:	20 f0       	brcs	.+8      	; 0x5b8 <__udivmodsi4_ep>
 5b0:	a2 1b       	sub	r26, r18
 5b2:	b3 0b       	sbc	r27, r19
 5b4:	e4 0b       	sbc	r30, r20
 5b6:	f5 0b       	sbc	r31, r21

000005b8 <__udivmodsi4_ep>:
 5b8:	66 1f       	adc	r22, r22
 5ba:	77 1f       	adc	r23, r23
 5bc:	88 1f       	adc	r24, r24
 5be:	99 1f       	adc	r25, r25
 5c0:	1a 94       	dec	r1
 5c2:	69 f7       	brne	.-38     	; 0x59e <__udivmodsi4_loop>
 5c4:	60 95       	com	r22
 5c6:	70 95       	com	r23
 5c8:	80 95       	com	r24
 5ca:	90 95       	com	r25
 5cc:	9b 01       	movw	r18, r22
 5ce:	ac 01       	movw	r20, r24
 5d0:	bd 01       	movw	r22, r26
 5d2:	cf 01       	movw	r24, r30
 5d4:	08 95       	ret

000005d6 <_exit>:
 5d6:	f8 94       	cli

000005d8 <__stop_program>:
 5d8:	ff cf       	rjmp	.-2      	; 0x5d8 <__stop_program>
